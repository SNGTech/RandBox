@page "/"
@inject NavigationManager Navigation
@inject IGenericService<Category> CategoryService
@inject IProductService ProductService

<PageTitle>randBox</PageTitle>

<section class="hero-container vh-100 d-flex justify-content-center align-items-center">
	<div class="row text-center d-flex justify-content-center gap-4">
		<div class="randbox-title col d-flex justify-content-center">
			<h1 class="randbox-title-1">rand</h1>
			<h1 class="randbox-title-2">Box</h1>
		</div>
		<h3 class="subtitle">The Future of Mystery Boxes is Here</h3>

		<button class="btn btn-subscribe" @onclick="NavigateToPricing">Subscribe Now</button>
	</div>

</section>

<section class="section-2 vh-100 row d-flex align-content-center">
		<div class="d-flex justify-content-center">
			<h1 class="section-2-title text-center">Reinventing The <span>Mystery Box</span></h1>
		</div>
		<section class="section-2-content col d-flex justify-content-around align-items-center">
			<div class="randbox-descriptor desc-1">
				<h4>Header 1</h4>
				<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
			</div>
			<img class="randbox-mockup-box" src="images/black_mockup_box.png" />
			<div class="randbox-descriptor desc-2">
				<h4>Header 2</h4>
				<p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
			</div>
		</section>
</section>

@if (products == null)
{
	<h2>> Loading Products...</h2>
}
else 
{
	<section class="section-3 vh-100 row d-flex justify-content-center">
		<div class="randbox-section-header row d-flex justify-content-start align-content-start">
			<h2>No Two Unboxing The <span>Same</span></h2>
			<p>With over 100 items across more than 5 countries, every new unboxing is bound to be a never-seen before experience</p>
		</div>
		<div class="product-carousel col d-flex justify-content-center align-content-center">
			<ul class="list-unstyled d-flex">
				@foreach (var product in products!.Take(5))
				{
					var class_size = "";
					if (product.ProductID == 1 || product.ProductID == 5) class_size = "card-small";

					<li><ProductShowcaseCard Product=@product ClassSize=@class_size /></li>
				}
			</ul>
		</div>
		<div class="d-flex justify-content-center">
			<button class="btn btn-browse" @onclick="NavigateToProducts">Browse More</button>
		</div>
	</section>
}

@if (categories == null)
{
	<h2>> Loading Categories...</h2>
}
else {
	<section class="section-4 vh-100 row d-flex justify-content-center">
		<div class="randbox-section-header row d-flex justify-content-start align-content-start">
			<h2><span>Multiple</span> Categories</h2>
			<p>Our wide variety of categories ensures that theres always something for you!</p>
		</div>
		<div class="d-flex justify-content-center align-content-center">
			<ul class="list-unstyled d-flex justify-content-evenly gap-5">
				@foreach (var category in categories!.Take(3))
				{
					<li><CategoryCard Category="@category" /></li>
				}
			</ul>
		</div>
		<div class="d-flex justify-content-center">
			<button class="btn btn-browse" @onclick="NavigateToCategories">View Our Categories</button>
		</div>
	</section>
}

@code {

	private List<Category>? categories { get; set; }
	private List<Product>? products { get; set; }

	protected override async Task OnInitializedAsync()
	{
		CategoryService._httpInterceptorService.RegisterEvent();
		ProductService._httpInterceptorService.RegisterEvent();

		categories = await CategoryService.GetAll();
		products = await ProductService.GetAll();
	}

	protected void NavigateToPricing()
	{
		Navigation.NavigateTo("pricing");
	}

	protected void NavigateToProducts()
	{
		Navigation.NavigateTo("products");
	}

	protected void NavigateToCategories()
	{
		Navigation.NavigateTo("categories");
	}
}