@page "/view-order/{OrderId:int}"
@inject IGenericService<Order> OrderService
@inject IOrderItemService OrderItemService
@inject IGenericService<Product> ProductService


<h2 class="text-center">Order Details</h2>

@if (order != null)
{
    <div>
        <p><strong>Order ID:</strong> @order.OrderID</p>
        <p><strong>Order Date:</strong> @order.DateTimeCheckout</p>
        <p><strong>Delivery Status:</strong> @order.DeliveryStatus</p>

        <h3>Order Items</h3>

        <!-- Display all order items with the same order ID -->
        <h3>All Order Items </h3>
        <table class="table">
            <thead>
                <tr>
                    <th style="color: white;"><h3>Product</h3></th>
                    <th style="color: white;"><h3>Quantity</h3></th>
                    <th style="color: white;"><h3>Price</h3></th>
                    
                </tr>
            </thead>
            <tbody>
                @foreach (var otherOrderItem in orderitems!)
                {
                    @if (otherOrderItem.OrderID ==order.OrderID)
                    {
                        @foreach (var product in products)
                        {
                            @if (product.ProductID == otherOrderItem.ProductID)
                            {
                                <tr>
                                    <td style="color: white;"><strong>@product.Name</strong></td>
                                    <td style="color: white;"><strong>@otherOrderItem.Qty</strong></td>
                                    <td style="color: white;">$@(product.DiscountedPrice * otherOrderItem.Qty)</td>
                                </tr>
                            }
                        }
                    }
                }
            </tbody>
        </table>    
    </div>
}
else
{
    <p>Loading order details...</p>
}

@code {
    [Parameter]
    public int OrderId { get; set; }

    private Order? order;
    private List<Product>? products;
    private List<OrderItem>? orderitems;

    protected override async Task OnInitializedAsync()
    {
        orderitems = await OrderItemService.GetAll();
        order = await OrderService.GetById(OrderId);
        products = await ProductService.GetAll();

        
    }
}
