
@using System.ComponentModel;
@page "/product-details/{ProductId:int}"
@inject IGenericService<Product> ProductService
@inject IGenericService<OrderItem> OrderItemService
@inject IGenericService<Order> OrderService



<h2 class="text-center">Product Description</h2>




<div class="row">
    @* Left side: Product Image *@
    <div class="col-md-6">
        @if (product != null)
        {
            <div class="product-card-showcase row d-flex" style="margin-top:4rem;">
                <div class="gradient" style="margin-top:3rem;"></div>
                <img src="@product!.ThumbnailURL" class="img-fluid" />
            </div>
        }
        else
        {
            <p>Loading product details...</p>
        }
    </div>

    @* Right side: Product Details *@
    <div class="col-md-6">
        <div style="margin-left:1.5em;">
            @if (product != null)
            {
                <p>Snacks</p>
                <h4 style="margin-top:4rem;">@product!.Name</h4>
                <h2>@product!.DiscountedPrice SGD </h2>
                <p>Price</p><hr />
                <p>Status: In Stock (@product.StockNo)    Country: @product?.Country?.Name</p>   
                <p>@product!.Description</p><hr/>
            }
        </div>
    </div>
</div>

<div>
    <label for="quantity">Quantity:</label>
    <input type="number" id="quantity" name="quantity" min="1" @bind="quantity" />
</div>


<button type="button" class="btn btn-primary" @onclick="() => AddToCart(quantity)">Add to Cart</button>



@code {
    [Parameter]
    public int ProductId { get; set; }

    private Product? product;
    private Category? category;

    protected override async Task OnInitializedAsync()
    {
        product = await ProductService.GetByOrderId(ProductId);

    }
    [Parameter]
    public EventCallback OnSuccessfulSubmit { get; set; }

    private EventCallback SubmitCallback { get; set; }

    private InputModel? input { get; set; }
    private bool show = false;
    private bool isCreate { get; set; }

    protected override void OnInitialized()
    {
        input = new InputModel();
    }


    private int quantity = 0;
    protected async Task AddToCart(int quantity)
    {
        var message = $"Added {quantity} {product!.Name}(s) to the cart.";
        Console.WriteLine(message);
        
        var newOrder = new Order
            {
                DateTimeCheckout = DateTime.Now,
                DeliveryStatus = false,
                CustomerID = 1,  
                OrderItems = new List<OrderItem>()  
            };

        
        var addedOrder = await OrderService.Insert(newOrder);
        input.OrderID = addedOrder.OrderID;
        
        var orderItem = new OrderItem
            {
                Qty = quantity,
                ProductID = ProductId,
                OrderID = input.OrderID ?? 0  // Use the OrderID from the input model
            };
// Add the OrderItem to the database
        
        var addedOrderItem = await OrderItemService.Insert(orderItem);

        await OnSuccessfulSubmit.InvokeAsync();
    }
    public class InputModel
    {
      
        public int OrderItemID { get; set; }
        [Required]
        public int? Qty { get; set; }
        [Required]
        public int? OrderID { get; set; }
        [Required]
        public int? ProductID { get; set; }
    }

}
 