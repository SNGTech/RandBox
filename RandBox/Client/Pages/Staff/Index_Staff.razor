@page "/staff/dashboard"
@inject ICustomerService CustomerService
@inject IOrderService OrderService
@inject ISubscriptionPlanService SubscriptionService
@attribute [Authorize(Policy = "StaffPolicy")]

@if (customers == null || subscriptions == null || orders == null)
{
    <h4>> Loading Dashboard</h4>
}
else {
    <section class="">
        <h4 class="mb-4">Welcome Staff</h4>

        <div class="col d-flex justify-content-between">
            <div class="subContainer text-center">
                <div class="info">Total Subscriptions</div>
                <div class="info-number">@subscriptions.Count</div>
            </div>

            <div class="usersContainer text-center">
                <div class="info">Total No. of Users</div>
                <div class="info-number">@customers!.Count</div>
            </div>

            <div class="salesContainer text-center">
                <div class="info">Total Product Sales</div>
                <div class="info-number">$@totalIncome</div>
            </div>
        </div>
    </section>
}

@code {
    private List<Customer>? customers;
    private List<Orders>? orders;
    private List<SubscriptionPlan>? subscriptions;

    private decimal totalIncome = 0M;

    protected override async Task OnInitializedAsync()
    {
        CustomerService._httpInterceptorService.RegisterEvent();
        OrderService._httpInterceptorService.RegisterEvent();
        SubscriptionService._httpInterceptorService.RegisterEvent();

        customers = await CustomerService.GetAll();
        orders = await OrderService.GetAll();
        subscriptions = await SubscriptionService.GetAll();

        decimal totalFromOrders = await OrderService.GetTotalIncomeFromOrders();
        decimal totalFromSubscriptions = 0M;
        totalIncome = totalFromOrders + totalFromSubscriptions; 
    }
}