@page "/staff/store"
@inject NavigationManager Navigation
@inject IGenericService<Product> ProductService

@if (products == null)
{
    <h4>> Loading Store Manager</h4>
}
else
{
    <div>
        <h2 class="stock-title">Stock Alerts</h2>
        <h3 class="stock-alert"><i class="bi bi-exclamation-triangle-fill" /> You have some items with low and/or no stock!</h3>

        <div class="product-carousel">
            <ul class="list-unstyled col d-flex justify-content-start">
                @foreach (var product in products!)
                {
                    if (product.StockNo < 300)
                    {
                        <li><ProductCard Product=@product /></li>
                    }
                }
            </ul>
        </div>

        <div class="title-bar col d-flex justify-content-start align-items-center">
            <h2 class="page-title">Store Management</h2>
            <select class="store-section-dropdown" @onchange="SelectedStoreSectionChanged">
                <option value="" disabled>Select Store Section...</option>
                <option value="@StoreSection.Products">Products</option>
                <option value="@StoreSection.Categories">Categories</option>
                <option value="@StoreSection.Countries">Countries</option>
                <option value="@StoreSection.Plans">Subscription Plans</option>
            </select>
        </div>

        @switch(storeSection)
        {
            case StoreSection.Products:
                <StoreManagerProductSection />
                break;
            case StoreSection.Categories:
                <StoreManagerCategorySection />
                break;
            case StoreSection.Countries:
                <StoreManagerCountrySection  />
                break;
            case StoreSection.Plans:
                <StoreManagerPlanSection />
                break;
            default:
                <h4 class="page-invalid"><i class="bi bi-cone-striped" /> Invalid Store Section Selected. Please select a valid one.</h4>
                break;
        }
    </div>
}

@code {
    //initalise the sections
    enum StoreSection
    {
        Products,
        Categories, 
        Countries,
        Plans
    };

    private StoreSection storeSection { get; set; }

    private List<Product>? products;

    protected override async Task OnInitializedAsync()
    {
        storeSection = StoreSection.Products;

        products = await ProductService.GetAll();
    }

 

    private void SelectedStoreSectionChanged(ChangeEventArgs e)
    {
        if (e.Value != null)
        {
            storeSection = Enum.Parse<StoreSection>(e.Value.ToString()!);
            //await LoadStore(storeSection);
        }
    }
}